global A=[1.0 -0.1 ; -0.1 1.0;0.5 0.5]  #matrix of average payoff in subjective model
global AT=[0 0]
Pri=[0.1, 0.2, 0.7] #prior distribution of models.(order is w.r.t. payoff matrix)
T=1000
W=100


#true payoff generating function.
mod=fill(Normal(),length(AT)) 
for i=1:length(AT)
    mod[i]=Normal(AT[i])
end
#subjective payoff generating function.For calculating density
M=fill(Normal(),size(A))
for i=1:size(A,1)
    for j=1:size(A,2)
        M[i,j]=Normal(A[i,j])
    end
end

function Epay(act,B)
   # if act==1||2
    ee=0
    for i=1:length(B)
    ee=ee+A[i,act]*B[i]
    end
        return ee
 #   else print("error of action space")
  #      return 0
 #   end
end



#########main
won=zeros(length(Pri))
for j=1:W
S=zeros(T) #empty sample vector
loglik_r=log.(Pri)-fill(log(Pri[1]),length(Pri))  #prior loglikelihood
    
#=
    update loglikelihood
    for e=1:size(loglik_r)
        loglik_r[e]=loglik_r[e]+logpdf.(M[e,action],S[t])-logpdf.(M[1,action],S[t])
    end  
    =#
         
    
#calculate current belief
    lik_r=exp.(loglik_r)
Belief=lik_r/sum(lik_r) #belief

    #loop for time t
for t=1:T
if Epay(1,Belief)>Epay(2,Belief)
        action=1 
       S[t]=rand(mod[action])
           
            #update loglikelihood
    for e=1:length(loglik_r)
        loglik_r[e]=loglik_r[e]+logpdf.(M[e,action],S[t])-logpdf.(M[1,action],S[t])
    end
         #=  if j<10 
            print(1)
            end =#

elseif Epay(1,Belief)<Epay(2,Belief)
        action=2
       S[t]=rand(mod[action])
            #update loglikelihood
    for e=1:length(loglik_r)
        loglik_r[e]=loglik_r[e]+logpdf.(M[e,action],S[t])-logpdf.(M[1,action],S[t])
    end
         #=  if j<10 
            print(2)
            end =#
    else
        ra=rand(1:2)
        action=ra
        S[t]=rand(mod[action])
            #update loglikelihood
    for e=1:length(loglik_r)
        loglik_r[e]=loglik_r[e]+logpdf.(M[e,action],S[t])-logpdf.(M[1,action],S[t])
    end
        #=    if j<10 
            print(ra)
            end =#
end #end of choosing action
#calculate current belief
    lik_r=exp.(loglik_r)
Belief=lik_r/sum(lik_r) #belief
        
        
    end #end of time loop

#time T 
 for o=1:length(Pri) 
 if Belief[o]>0.9
            won[o]=won[o]+1
    end
end
    
end #end of world loop

for i=1:length(Pri)
print("Times that M",i," win is: ",won(i))
end


